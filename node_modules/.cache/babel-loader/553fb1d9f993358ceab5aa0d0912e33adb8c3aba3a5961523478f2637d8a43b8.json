{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acere\\\\OneDrive\\\\Documentos\\\\app cancionero proyectos\\\\p10\\\\src\\\\components\\\\LanguageFilter.js\";\nimport React from 'react';\nimport translations from '../utils/translations'; // Importar el archivo de traducciones\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageFilter = ({\n  allLanguages,\n  onLanguageChange,\n  currentLanguage\n}) => {\n  const t = translations[currentLanguage] || translations['Español']; // Obtener las traducciones para el idioma actual\n\n  const handleCheckboxChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    onLanguageChange(prevSelected => {\n      if (checked) {\n        return [...prevSelected, value];\n      } else {\n        return prevSelected.filter(lang => lang !== value);\n      }\n    });\n  };\n\n  // Función para obtener el nombre traducido del idioma\n  const getTranslatedLanguageName = lang => {\n    const key = `language_${lang.replace(/ /g, '_')}`; // Ejemplo: \"language_Español\"\n    return t[key] || lang; // Devuelve la traducción o el nombre original si no hay traducción\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative group\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors whitespace-nowrap\",\n      children: t.filterByLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute left-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 ease-in-out transform scale-95 group-hover:scale-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-1\",\n        role: \"menu\",\n        \"aria-orientation\": \"vertical\",\n        \"aria-labelledby\": \"options-menu\",\n        children: allLanguages.map(lang => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: lang,\n            onChange: handleCheckboxChange,\n            className: \"form-checkbox h-4 w-4 text-black transition duration-150 ease-in-out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2\",\n            children: getTranslatedLanguageName(lang)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), \" \"]\n        }, lang, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = LanguageFilter;\nexport default LanguageFilter;\nvar _c;\n$RefreshReg$(_c, \"LanguageFilter\");","map":{"version":3,"names":["React","translations","jsxDEV","_jsxDEV","LanguageFilter","allLanguages","onLanguageChange","currentLanguage","t","handleCheckboxChange","event","value","checked","target","prevSelected","filter","lang","getTranslatedLanguageName","key","replace","className","children","filterByLanguage","fileName","_jsxFileName","lineNumber","columnNumber","role","map","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/acere/OneDrive/Documentos/app cancionero proyectos/p10/src/components/LanguageFilter.js"],"sourcesContent":["import React from 'react';\nimport translations from '../utils/translations'; // Importar el archivo de traducciones\n\nconst LanguageFilter = ({ allLanguages, onLanguageChange, currentLanguage }) => {\n  const t = translations[currentLanguage] || translations['Español']; // Obtener las traducciones para el idioma actual\n\n  const handleCheckboxChange = (event) => {\n    const { value, checked } = event.target;\n    onLanguageChange(prevSelected => {\n      if (checked) {\n        return [...prevSelected, value];\n      } else {\n        return prevSelected.filter(lang => lang !== value);\n      }\n    });\n  };\n\n  // Función para obtener el nombre traducido del idioma\n  const getTranslatedLanguageName = (lang) => {\n    const key = `language_${lang.replace(/ /g, '_')}`; // Ejemplo: \"language_Español\"\n    return t[key] || lang; // Devuelve la traducción o el nombre original si no hay traducción\n  };\n\n  return (\n    <div className=\"relative group\">\n      <button className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors whitespace-nowrap\">\n        {t.filterByLanguage}\n      </button>\n      <div className=\"absolute left-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 ease-in-out transform scale-95 group-hover:scale-100\">\n        <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n          {allLanguages.map(lang => (\n            <label key={lang} className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n              <input\n                type=\"checkbox\"\n                value={lang}\n                onChange={handleCheckboxChange}\n                className=\"form-checkbox h-4 w-4 text-black transition duration-150 ease-in-out\"\n              />\n              <span className=\"ml-2\">{getTranslatedLanguageName(lang)}</span> {/* Usar la función de traducción */}\n            </label>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LanguageFilter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,YAAY;EAAEC,gBAAgB;EAAEC;AAAgB,CAAC,KAAK;EAC9E,MAAMC,CAAC,GAAGP,YAAY,CAACM,eAAe,CAAC,IAAIN,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;;EAEpE,MAAMQ,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAM;MAAEC,KAAK;MAAEC;IAAQ,CAAC,GAAGF,KAAK,CAACG,MAAM;IACvCP,gBAAgB,CAACQ,YAAY,IAAI;MAC/B,IAAIF,OAAO,EAAE;QACX,OAAO,CAAC,GAAGE,YAAY,EAAEH,KAAK,CAAC;MACjC,CAAC,MAAM;QACL,OAAOG,YAAY,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKL,KAAK,CAAC;MACpD;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMM,yBAAyB,GAAID,IAAI,IAAK;IAC1C,MAAME,GAAG,GAAG,YAAYF,IAAI,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;IACnD,OAAOX,CAAC,CAACU,GAAG,CAAC,IAAIF,IAAI,CAAC,CAAC;EACzB,CAAC;EAED,oBACEb,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BlB,OAAA;MAAQiB,SAAS,EAAC,sGAAsG;MAAAC,QAAA,EACrHb,CAAC,CAACc;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACTvB,OAAA;MAAKiB,SAAS,EAAC,+MAA+M;MAAAC,QAAA,eAC5NlB,OAAA;QAAKiB,SAAS,EAAC,MAAM;QAACO,IAAI,EAAC,MAAM;QAAC,oBAAiB,UAAU;QAAC,mBAAgB,cAAc;QAAAN,QAAA,EACzFhB,YAAY,CAACuB,GAAG,CAACZ,IAAI,iBACpBb,OAAA;UAAkBiB,SAAS,EAAC,qEAAqE;UAAAC,QAAA,gBAC/FlB,OAAA;YACE0B,IAAI,EAAC,UAAU;YACflB,KAAK,EAAEK,IAAK;YACZc,QAAQ,EAAErB,oBAAqB;YAC/BW,SAAS,EAAC;UAAsE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjF,CAAC,eACFvB,OAAA;YAAMiB,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAEJ,yBAAyB,CAACD,IAAI;UAAC;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,KAAC;QAAA,GAPtDV,IAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQT,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GA1CI3B,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}