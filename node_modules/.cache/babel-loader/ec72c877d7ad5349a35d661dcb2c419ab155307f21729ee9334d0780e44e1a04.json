{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acere\\\\OneDrive\\\\Documentos\\\\app cancionero proyectos\\\\p10\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n//import songsData from './mock/songs'; // Vuelve a importar los datos mock\nimport SongCard from './components/SongCard';\nimport SimpleSongCard from './components/SimpleSongCard';\nimport SongFilter from './components/SongFilter';\nimport SongSearch from './components/SongSearch';\n// import AddSongForm from './components/AddSongForm'; // Ya no se necesita\nimport SongDetailModal from './components/SongDetailModal';\nimport LanguageFilter from './components/LanguageFilter';\n// import BulkImportForm from './components/BulkImportForm'; // Ya no se necesita\nimport translations from './utils/translations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [songsList, setSongsList] = useState(songsData); // Vuelve a usar los datos mock\n  const [filteredSongs, setFilteredSongs] = useState(songsData);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeCategory, setActiveCategory] = useState('Todos');\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [currentLanguage, setCurrentLanguage] = useState('Español');\n  const [showMessageModal, setShowMessageModal] = useState(false); // Estado para el modal de mensaje\n  // const [showBulkImport, setShowBulkImport] = useState(false); // Ya no se necesita\n  // const [editingSong, setEditingSong] = useState(null); // Ya no se necesita\n  const [showingDetailSong, setShowingDetailSong] = useState(null);\n  // const [isAdmin, setIsAdmin] = useState(true); // Ya no se necesita para controlar botones de edición/importación\n\n  const t = translations[currentLanguage] || translations['Español'];\n\n  // Definición de categories y allLanguages\n  // Aseguramos que estas listas se generen correctamente a partir de songsData\n  const categories = ['Todos', ...new Set(songsData.map(song => song.category))];\n  // allLanguages debe ser una lista fija de todos los idiomas posibles, no solo los presentes en songsData\n  // Esto asegura que el filtro de idiomas siempre muestre todas las opciones, incluso si no hay canciones en ese idioma.\n  const allLanguages = ['Alemán', 'Catalán', 'Español', 'Francés', 'Gallego', 'Inglés', 'Italiano', 'Latín', 'Portugués', 'Vasco', 'Otro'].sort();\n\n  // Actualizar filteredSongs cuando songsList o los filtros cambian\n  useEffect(() => {\n    let result = [...songsList];\n\n    // Filtrar por categoría\n    if (activeCategory !== 'Todos') {\n      result = result.filter(song => song.category === activeCategory);\n    }\n\n    // Filtrar por término de búsqueda\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      result = result.filter(song => song.title.toLowerCase().includes(term) || song.category.toLowerCase().includes(term) || song.language && song.language.toLowerCase().includes(term));\n    }\n\n    // Filtrar por idiomas seleccionados\n    if (selectedLanguages.length > 0) {\n      result = result.filter(song => selectedLanguages.includes(song.language));\n    }\n\n    // Mantener seleccionados arriba y ordenar el resto\n    const selected = result.filter(song => song.selected);\n    const notSelected = result.filter(song => !song.selected);\n    notSelected.sort((a, b) => a.title.localeCompare(b.title));\n    result = [...selected, ...notSelected];\n    setFilteredSongs(result);\n  }, [activeCategory, searchTerm, songsList, selectedLanguages]);\n  const toggleSongSelection = songId => {\n    setSongsList(prevSongs => prevSongs.map(song => song.id === songId ? {\n      ...song,\n      selected: !song.selected\n    } : song));\n  };\n\n  // Las funciones de agregar, importar, editar y eliminar ahora solo simulan la acción\n  // y muestran un mensaje, ya que la escritura a SheetDB no se implementará aquí.\n  // Se eliminan las funciones handleAddSong, handleImportSongs, handleEditSong, handleUpdateSong, handleDeleteSong\n  // ya que no se usarán ni siquiera para mostrar alerts, los botones serán eliminados.\n\n  const handleShowDetail = song => {\n    setShowingDetailSong(song);\n  };\n  const handleCloseDetail = () => {\n    setShowingDetailSong(null);\n  };\n  const handleLanguageFilterChange = languages => {\n    setSelectedLanguages(languages);\n  };\n  const handleInterfaceLanguageChange = event => {\n    setCurrentLanguage(event.target.value);\n  };\n  const handleSearch = term => {\n    setSearchTerm(term);\n  };\n  const handleFilterChange = category => {\n    setActiveCategory(category);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-4 right-4 z-20\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: currentLanguage,\n          onChange: handleInterfaceLanguageChange,\n          className: \"rounded-md border border-gray-300 shadow-sm px-3 py-1 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-black\",\n          children: Object.keys(translations).map(langKey => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: langKey,\n            children: langKey\n          }, langKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-lg p-8 mb-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-5xl font-extrabold text-gray-900 mb-4\",\n          children: t.appTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl text-gray-700\",\n          children: t.appSubtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(SongSearch, {\n          onSearch: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-between items-center mb-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(LanguageFilter, {\n          allLanguages: allLanguages,\n          onLanguageChange: handleLanguageFilterChange,\n          currentLanguage: currentLanguage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowMessageModal(!showMessageModal); // Alternar visibilidad del modal de mensaje\n            // setShowBulkImport(false); // Ya no se necesita\n            // setEditingSong(null); // Ya no se necesita\n          },\n          className: \"px-4 py-2 bg-black text-white rounded-lg hover:bg-gray-800 transition-colors whitespace-nowrap\",\n          children: t.addSongButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: /*#__PURE__*/_jsxDEV(SongFilter, {\n          categories: categories,\n          onFilterChange: handleFilterChange,\n          currentLanguage: currentLanguage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), showMessageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-xl max-w-md w-full p-6 text-center shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-bold text-gray-900 mb-4\",\n            children: \"\\xA1Muchas gracias por su colaboraci\\xF3n!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 mb-6\",\n            children: [\"Por favor, env\\xEDe el nuevo canto a \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"mailto:cancioneroliturgico1@gmail.com\",\n              className: \"text-blue-600 hover:underline\",\n              children: \"cancioneroliturgico1@gmail.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 51\n            }, this), \". Los administradores comprobar\\xE1n que es lit\\xFArgico y lo a\\xF1adir\\xE1n a la plataforma.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowMessageModal(false),\n            className: \"px-6 py-2 bg-black text-white rounded-lg hover:bg-gray-800 transition-colors\",\n            children: \"Cerrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4\",\n        children: filteredSongs.length > 0 ? filteredSongs.map(song => song.selected ? /*#__PURE__*/_jsxDEV(SongCard, {\n          song: song,\n          onToggleSelect: toggleSongSelection\n          // onEditSong={handleEditSong} // Se elimina el prop onEditSong\n          ,\n          currentLanguage: currentLanguage\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(SimpleSongCard, {\n          song: song,\n          onToggleSelect: toggleSongSelection,\n          onShowDetail: () => handleShowDetail(song),\n          showCategory: activeCategory === 'Todos',\n          currentLanguage: currentLanguage\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-12\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: t.noSongsFound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), showingDetailSong && /*#__PURE__*/_jsxDEV(SongDetailModal, {\n      song: showingDetailSong,\n      onClose: handleCloseDetail\n      // onEditSong={handleEditSong} // Se elimina el prop onEditSong\n      ,\n      currentLanguage: currentLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pIwrhLvhMJjA5A2DnzGOoihsAUo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SongCard","SimpleSongCard","SongFilter","SongSearch","SongDetailModal","LanguageFilter","translations","jsxDEV","_jsxDEV","App","_s","songsList","setSongsList","songsData","filteredSongs","setFilteredSongs","searchTerm","setSearchTerm","activeCategory","setActiveCategory","selectedLanguages","setSelectedLanguages","currentLanguage","setCurrentLanguage","showMessageModal","setShowMessageModal","showingDetailSong","setShowingDetailSong","t","categories","Set","map","song","category","allLanguages","sort","result","filter","term","toLowerCase","title","includes","language","length","selected","notSelected","a","b","localeCompare","toggleSongSelection","songId","prevSongs","id","handleShowDetail","handleCloseDetail","handleLanguageFilterChange","languages","handleInterfaceLanguageChange","event","target","value","handleSearch","handleFilterChange","className","children","onChange","Object","keys","langKey","fileName","_jsxFileName","lineNumber","columnNumber","appTitle","appSubtitle","onSearch","onLanguageChange","onClick","addSongButton","onFilterChange","href","onToggleSelect","onShowDetail","showCategory","noSongsFound","onClose","_c","$RefreshReg$"],"sources":["C:/Users/acere/OneDrive/Documentos/app cancionero proyectos/p10/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n//import songsData from './mock/songs'; // Vuelve a importar los datos mock\nimport SongCard from './components/SongCard';\nimport SimpleSongCard from './components/SimpleSongCard';\nimport SongFilter from './components/SongFilter';\nimport SongSearch from './components/SongSearch';\n// import AddSongForm from './components/AddSongForm'; // Ya no se necesita\nimport SongDetailModal from './components/SongDetailModal';\nimport LanguageFilter from './components/LanguageFilter';\n// import BulkImportForm from './components/BulkImportForm'; // Ya no se necesita\nimport translations from './utils/translations';\n\nconst App = () => {\n  const [songsList, setSongsList] = useState(songsData); // Vuelve a usar los datos mock\n  const [filteredSongs, setFilteredSongs] = useState(songsData);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeCategory, setActiveCategory] = useState('Todos');\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [currentLanguage, setCurrentLanguage] = useState('Español');\n  const [showMessageModal, setShowMessageModal] = useState(false); // Estado para el modal de mensaje\n  // const [showBulkImport, setShowBulkImport] = useState(false); // Ya no se necesita\n  // const [editingSong, setEditingSong] = useState(null); // Ya no se necesita\n  const [showingDetailSong, setShowingDetailSong] = useState(null);\n  // const [isAdmin, setIsAdmin] = useState(true); // Ya no se necesita para controlar botones de edición/importación\n\n  const t = translations[currentLanguage] || translations['Español'];\n\n  // Definición de categories y allLanguages\n  // Aseguramos que estas listas se generen correctamente a partir de songsData\n  const categories = ['Todos', ...new Set(songsData.map(song => song.category))];\n  // allLanguages debe ser una lista fija de todos los idiomas posibles, no solo los presentes en songsData\n  // Esto asegura que el filtro de idiomas siempre muestre todas las opciones, incluso si no hay canciones en ese idioma.\n  const allLanguages = [\n    'Alemán',\n    'Catalán',\n    'Español',\n    'Francés',\n    'Gallego',\n    'Inglés',\n    'Italiano',\n    'Latín',\n    'Portugués',\n    'Vasco',\n    'Otro'\n  ].sort();\n\n  // Actualizar filteredSongs cuando songsList o los filtros cambian\n  useEffect(() => {\n    let result = [...songsList];\n    \n    // Filtrar por categoría\n    if (activeCategory !== 'Todos') {\n      result = result.filter(song => song.category === activeCategory);\n    }\n    \n    // Filtrar por término de búsqueda\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      result = result.filter(song => \n        song.title.toLowerCase().includes(term) || \n        song.category.toLowerCase().includes(term) ||\n        (song.language && song.language.toLowerCase().includes(term))\n      );\n    }\n\n    // Filtrar por idiomas seleccionados\n    if (selectedLanguages.length > 0) {\n      result = result.filter(song => selectedLanguages.includes(song.language));\n    }\n\n    // Mantener seleccionados arriba y ordenar el resto\n    const selected = result.filter(song => song.selected);\n    const notSelected = result.filter(song => !song.selected);\n\n    notSelected.sort((a, b) => a.title.localeCompare(b.title));\n\n    result = [...selected, ...notSelected];\n    \n    setFilteredSongs(result);\n  }, [activeCategory, searchTerm, songsList, selectedLanguages]);\n\n\n  const toggleSongSelection = (songId) => {\n    setSongsList(prevSongs => \n      prevSongs.map(song => \n        song.id === songId \n          ? { ...song, selected: !song.selected } \n          : song\n      )\n    );\n  };\n\n  // Las funciones de agregar, importar, editar y eliminar ahora solo simulan la acción\n  // y muestran un mensaje, ya que la escritura a SheetDB no se implementará aquí.\n  // Se eliminan las funciones handleAddSong, handleImportSongs, handleEditSong, handleUpdateSong, handleDeleteSong\n  // ya que no se usarán ni siquiera para mostrar alerts, los botones serán eliminados.\n\n  const handleShowDetail = (song) => {\n    setShowingDetailSong(song);\n  };\n\n  const handleCloseDetail = () => {\n    setShowingDetailSong(null);\n  };\n\n  const handleLanguageFilterChange = (languages) => {\n    setSelectedLanguages(languages);\n  };\n\n  const handleInterfaceLanguageChange = (event) => {\n    setCurrentLanguage(event.target.value);\n  };\n\n  const handleSearch = (term) => {\n    setSearchTerm(term);\n  };\n\n  const handleFilterChange = (category) => {\n    setActiveCategory(category);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-6xl mx-auto relative\">\n        \n        {/* Selector de idioma de interfaz en la esquina superior derecha */}\n        <div className=\"absolute top-4 right-4 z-20\">\n          <select\n            value={currentLanguage}\n            onChange={handleInterfaceLanguageChange}\n            className=\"rounded-md border border-gray-300 shadow-sm px-3 py-1 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-black\"\n          >\n            {Object.keys(translations).map(langKey => (\n              <option key={langKey} value={langKey}>{langKey}</option>\n            ))}\n          </select>\n        </div>\n\n        {/* Portada estilizada */}\n        <div className=\"bg-white rounded-xl shadow-lg p-8 mb-8 text-center\">\n          <h1 className=\"text-5xl font-extrabold text-gray-900 mb-4\">{t.appTitle}</h1>\n          <p className=\"text-xl text-gray-700\">{t.appSubtitle}</p>\n        </div>\n        \n        {/* Buscador en la primera línea */}\n        <div className=\"mb-4\">\n          <SongSearch onSearch={handleSearch} />\n        </div>\n\n        {/* Botones en la segunda línea */}\n        <div className=\"flex flex-wrap justify-between items-center mb-4 gap-4\">\n          <LanguageFilter allLanguages={allLanguages} onLanguageChange={handleLanguageFilterChange} currentLanguage={currentLanguage} />\n          \n          {/* Se elimina el botón de Importar Cantos */}\n          {/* {isAdmin && ( \n            <button\n              onClick={() => {\n                setShowBulkImport(!showBulkImport);\n                setShowMessageModal(false); \n                setEditingSong(null);\n              }}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors whitespace-nowrap\"\n            >\n              {showBulkImport ? 'Cancelar Importación' : 'Importar Cantos'}\n            </button>\n          )} */}\n\n          <button\n            onClick={() => {\n              setShowMessageModal(!showMessageModal); // Alternar visibilidad del modal de mensaje\n              // setShowBulkImport(false); // Ya no se necesita\n              // setEditingSong(null); // Ya no se necesita\n            }}\n            className=\"px-4 py-2 bg-black text-white rounded-lg hover:bg-gray-800 transition-colors whitespace-nowrap\"\n          >\n            {t.addSongButton}\n          </button>\n        </div>\n\n        {/* Pestañas en la tercera línea */}\n        <div className=\"mb-8\">\n           <SongFilter categories={categories} onFilterChange={handleFilterChange} currentLanguage={currentLanguage} />\n        </div>\n        \n        {/* Modal de mensaje para agregar canto */}\n        {showMessageModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-xl max-w-md w-full p-6 text-center shadow-lg\">\n              <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">¡Muchas gracias por su colaboración!</h3>\n              <p className=\"text-gray-700 mb-6\">\n                Por favor, envíe el nuevo canto a <a href=\"mailto:cancioneroliturgico1@gmail.com\" className=\"text-blue-600 hover:underline\">cancioneroliturgico1@gmail.com</a>.\n                Los administradores comprobarán que es litúrgico y lo añadirán a la plataforma.\n              </p>\n              <button\n                onClick={() => setShowMessageModal(false)}\n                className=\"px-6 py-2 bg-black text-white rounded-lg hover:bg-gray-800 transition-colors\"\n              >\n                Cerrar\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Formulario de agregar/editar canto (eliminado) */}\n        {/* Formulario de importación masiva (eliminado) */}\n        \n        <div className=\"grid gap-4\">\n          {filteredSongs.length > 0 ? (\n            filteredSongs.map(song => (\n              song.selected ? (\n                <SongCard \n                  key={song.id} \n                  song={song} \n                  onToggleSelect={toggleSongSelection}\n                  // onEditSong={handleEditSong} // Se elimina el prop onEditSong\n                  currentLanguage={currentLanguage}\n                />\n              ) : (\n                <SimpleSongCard \n                  key={song.id} \n                  song={song} \n                  onToggleSelect={toggleSongSelection}\n                  onShowDetail={() => handleShowDetail(song)}\n                  showCategory={activeCategory === 'Todos'}\n                  currentLanguage={currentLanguage}\n                />\n              )\n            ))\n          ) : (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-500\">{t.noSongsFound}</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {showingDetailSong && (\n        <SongDetailModal \n          song={showingDetailSong} \n          onClose={handleCloseDetail} \n          // onEditSong={handleEditSong} // Se elimina el prop onEditSong\n          currentLanguage={currentLanguage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}